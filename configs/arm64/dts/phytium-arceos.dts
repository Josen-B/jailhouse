/*
 * Jailhouse, a Linux-based partitioning hypervisor
 *
 * Device tree for Linux inmate test on Raspberry Pi 4,
 * corresponds to configs/arm64/phytiumpi-arceos.c
 *
 * Copyright (c) Siemens AG, 2020
 *
 * Authors:
 *  Jan Kiszka <jan.kiszka@siemens.com>
 *
 * This work is licensed under the terms of the GNU GPL, version 2.  See
 * the COPYING file in the top-level directory.
 */

#include <dt-bindings/interrupt-controller/arm-gic.h>

/dts-v1/;

/ {
	model = "Jailhouse cell on PhytiumPi";

	#address-cells = <2>;
	#size-cells = <2>;

	interrupt-parent = <&gic>;

    chosen {
        stdout-path = &uart1;
    };

    aliases {
		serial1 = &uart1;
	};

	hypervisor {
		compatible = "jailhouse,cell";
	};

	psci {
		compatible   = "arm,psci-1.0";
		method       = "smc";
		cpu_suspend  = <0xc4000001>;
		cpu_off      = <0x84000002>;
		cpu_on       = <0xc4000003>;
		sys_poweroff = <0x84000008>;
		sys_reset    = <0x84000009>;
	};

	memory@b1000000 {
		reg = <0x00000000 0xb2000000 0x00000000 0x0E000000>;
		device_type = "memory";
	};

	firmware {
		scmi: scmi {
			compatible = "arm,scmi";
			mboxes = <&mbox 0>;
			mbox-names = "tx";
			shmem = <&cpu_scp_hpri>;
			#address-cells = <1>;
			#size-cells = <0>;

			scmi_dvfs: protocol@13 {
				reg = <0x13>;
				#clock-cells = <1>;
			};

			scmi_sensors0: protocol@15 {
				reg = <0x15>;
				#thermal-sensor-cells = <1>;
			};
		};
		optee {
			compatible = "linaro,optee-tz";
			method = "smc";
		};
	};

	cpus {
		#address-cells = <0x2>;
		#size-cells = <0x0>;

        cpu-map {
            cluster1 {
                core0 {
                    cpu = <&cpu_b1>;
                };
            };
        };

        cpu_b1: cpu@101 {
            device_type = "cpu";
            compatible = "phytium,ftc664", "arm,armv8";
            reg = <0x0 0x100>;
            enable-method = "psci";
            clocks = <&scmi_dvfs 1>;
            capacity-dmips-mhz = <5660>;
	    };

	};

    mbox: mailbox@32a00000 {
        compatible = "phytium,mbox";
        reg = <0x0 0x32a00000 0x0 0x1000>;
        interrupts = <GIC_SPI 22 IRQ_TYPE_LEVEL_HIGH>;
        #mbox-cells = <1>;
    };

    sram: sram@32a10000 {
        compatible = "phytium,pe220x-sram-ns", "mmio-sram";
        reg = <0x0 0x32a10000 0x0 0x2000>;

        #address-cells = <1>;
        #size-cells = <1>;
        ranges = <0x0 0x0 0x32a10000 0x2000>;

        cpu_scp_lpri: scp-shmem@0 {
            compatible = "arm,scmi-shmem";
            reg = <0x1000 0x400>;
        };

        cpu_scp_hpri: scp-shmem@1 {
            compatible = "arm,scmi-shmem";
            reg = <0x1400 0x400>;
        };
    };

	timer {
		compatible = "arm,armv8-timer";
		interrupts = <GIC_PPI 13 IRQ_TYPE_LEVEL_LOW>,
			     <GIC_PPI 14 IRQ_TYPE_LEVEL_LOW>,
			     <GIC_PPI 11 IRQ_TYPE_LEVEL_LOW>,
			     <GIC_PPI 10 IRQ_TYPE_LEVEL_LOW>;
		clock-frequency = <50000000>;
	};

	clocks {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		sysclk_48mhz: clk48mhz {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <48000000>;
		};

		sysclk_50mhz: clk50mhz {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <50000000>;
		};

		sysclk_100mhz: clk100mhz {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <100000000>;
		};

		sysclk_200mhz: clk200mhz {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <200000000>;
		};

		sysclk_250mhz: clk250mhz {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <250000000>;
		};

		sysclk_300mhz: clk300mhz {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <300000000>;
		};

		sysclk_600mhz: clk600mhz {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <600000000>;
		};

		sysclk_1200mhz: clk1200mhz {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <1200000000>;
		};
	};

	smmu: iommu@30000000 {
		compatible = "arm,smmu-v3";
		reg = <0x0 0x30000000 0x0 0x800000>;
		interrupts = <GIC_SPI 240 IRQ_TYPE_EDGE_RISING>,
			     <GIC_SPI 239 IRQ_TYPE_EDGE_RISING>,
			     <GIC_SPI 236 IRQ_TYPE_EDGE_RISING>,
			     <GIC_SPI 242 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "eventq", "priq", "cmdq-sync", "gerror";
		dma-coherent;
		#iommu-cells = <1>;
	};

	gic: interrupt-controller@30800000 {
		compatible = "arm,gic-v3";
		#interrupt-cells = <3>;
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		interrupt-controller;
		reg = <0x0 0x30800000 0 0x20000>,	/* GICD */
		      <0x0 0x30880000 0 0x80000>,	/* GICR */
		      <0x0 0x30840000 0 0x10000>,	/* GICC */
		      <0x0 0x30850000 0 0x10000>,	/* GICH */
		      <0x0 0x30860000 0 0x10000>;	/* GICV */
		interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_LOW>;

		its: gic-its@30820000 {
			compatible = "arm,gic-v3-its";
			msi-controller;
			reg = <0x0 0x30820000 0x0 0x20000>;
		};
	};

    uart1: uart@2800d000 {
        compatible = "arm,pl011","arm,primecell";
        reg = <0x0 0x2800d000 0x0 0x1000>;
        interrupts = <GIC_SPI 84 IRQ_TYPE_LEVEL_HIGH>;
        clocks = <&sysclk_100mhz &sysclk_100mhz>;
        clock-names = "uartclk", "apb_pclk";
    };

    pcie: pcie@40000000 {
        compatible = "pci-host-ecam-generic";
        device_type = "pci";
        #address-cells = <3>;
        #size-cells = <2>;
        #interrupt-cells = <1>;
        reg = <0x0 0x40000000 0x0 0x10000000>;
        msi-parent = <&its>;
        bus-range = <0x0 0xff>;
        interrupt-map-mask = <0x0 0x0 0x0 0x7>;
        interrupt-map = <0x0 0x0 0x0 0x1 &gic 0x0 0x0 GIC_SPI 4 IRQ_TYPE_LEVEL_HIGH>,
                <0x0 0x0 0x0 0x2 &gic 0x0 0x0 GIC_SPI 5 IRQ_TYPE_LEVEL_HIGH>,
                <0x0 0x0 0x0 0x3 &gic 0x0 0x0 GIC_SPI 6 IRQ_TYPE_LEVEL_HIGH>,
                <0x0 0x0 0x0 0x4 &gic 0x0 0x0 GIC_SPI 7 IRQ_TYPE_LEVEL_HIGH>;
        ranges = <0x01000000 0x00 0x00000000 0x0  0x50000000  0x0  0x00f00000>,
                <0x02000000 0x00 0x58000000 0x0  0x58000000  0x0  0x28000000>,
                <0x03000000 0x10 0x00000000 0x10 0x00000000 0x10  0x00000000>;
        iommu-map = <0x0 &smmu 0x0 0x10000>;
        status = "disabled";
    };
};
